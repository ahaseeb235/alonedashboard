{"changed":true,"filter":false,"title":"compositechart.js","tooltip":"/static/js/compositechart.js","value":"// ---- composite chart for Role Created Date VS Role Type\n\n\n /* ---------- composite Charts -------------*/\n   // show_role_created_date(ndx);\n\nqueue()\n        .defer(d3.json, \"data/compositechart.json\")\n        .await(makeGraphs);\n    \n    function makeGraphs(error, transactionsData) {\n        var ndx = crossfilter(transactionsData);\n        var parseDate = d3.time.format(\"%d/%m/%Y\").parse;\n        transactionsData.forEach(function(d){\n            d.date = parseDate(d.date);\n        });\n        var date_dim = ndx.dimension(dc.pluck('date'));\n        var minDate = date_dim.bottom(1)[0].date;\n        var maxDate = date_dim.top(1)[0].date;\n        \n        \n        \n        \n        \n        function spend_by_name(name) {\n            return function(d) {\n                if (d.name === name) {\n                    return +d.spend;\n                } else {\n                    return 0;\n                }\n            }\n        }\n        var tomSpendByMonth = date_dim.group().reduceSum(spend_by_name('Tom'));\n        var bobSpendByMonth = date_dim.group().reduceSum(spend_by_name('Bob'));\n        \n        var aliceSpendByMonth = date_dim.group().reduceSum(spend_by_name('Alice'));\n        var compositeChart = dc.compositeChart('#composite-chart');\n        compositeChart\n            .width(990)\n            .height(200)\n            .dimension(date_dim)\n            .x(d3.time.scale().domain([minDate, maxDate]))\n            .yAxisLabel(\"Spend\")\n            .legend(dc.legend().x(80).y(20).itemHeight(13).gap(5))\n            .renderHorizontalGridLines(true)\n            .compose([\n                dc.lineChart(compositeChart)\n                    .colors('green')\n                    .group(tomSpendByMonth, 'Tom'),\n                dc.lineChart(compositeChart)\n                    .colors('red')\n                    .group(bobSpendByMonth, 'Bob'),\n                dc.lineChart(compositeChart)\n                    .colors('blue')\n                    .group(aliceSpendByMonth, 'Alice')\n            ])\n            .brushOn(false)\n            .render();\n        dc.renderAll();\n    }","undoManager":{"mark":2,"position":10,"stack":[[{"start":{"row":0,"column":0},"end":{"row":48,"column":5},"action":"insert","lines":["queue()","        .defer(d3.json, \"data/transactions.json\")","        .await(makeGraphs);","    function makeGraphs(error, transactionsData) {","        var ndx = crossfilter(transactionsData);","        var parseDate = d3.time.format(\"%d/%m/%Y\").parse;","        transactionsData.forEach(function(d){","            d.date = parseDate(d.date);","        });","        var date_dim = ndx.dimension(dc.pluck('date'));","        var minDate = date_dim.bottom(1)[0].date;","        var maxDate = date_dim.top(1)[0].date;","        function spend_by_name(name) {","            return function(d) {","                if (d.name === name) {","                    return +d.spend;","                } else {","                    return 0;","                }","            }","        }","        var tomSpendByMonth = date_dim.group().reduceSum(spend_by_name('Tom'));","        var bobSpendByMonth = date_dim.group().reduceSum(spend_by_name('Bob'));","        ","        var aliceSpendByMonth = date_dim.group().reduceSum(spend_by_name('Alice'));","        var compositeChart = dc.compositeChart('#composite-chart');","        compositeChart","            .width(990)","            .height(200)","            .dimension(date_dim)","            .x(d3.time.scale().domain([minDate, maxDate]))","            .yAxisLabel(\"Spend\")","            .legend(dc.legend().x(80).y(20).itemHeight(13).gap(5))","            .renderHorizontalGridLines(true)","            .compose([","                dc.lineChart(compositeChart)","                    .colors('green')","                    .group(tomSpendByMonth, 'Tom'),","                dc.lineChart(compositeChart)","                    .colors('red')","                    .group(bobSpendByMonth, 'Bob'),","                dc.lineChart(compositeChart)","                    .colors('blue')","                    .group(aliceSpendByMonth, 'Alice')","            ])","            .brushOn(false)","            .render();","        dc.renderAll();","    }"],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":58},"action":"insert","lines":["// ---- composite chart for Role Created Date VS Role Type"],"id":3}],[{"start":{"row":15,"column":8},"end":{"row":16,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":16,"column":0},"end":{"row":16,"column":8},"action":"insert","lines":["        "]},{"start":{"row":16,"column":8},"end":{"row":17,"column":0},"action":"insert","lines":["",""]},{"start":{"row":17,"column":0},"end":{"row":17,"column":8},"action":"insert","lines":["        "]},{"start":{"row":17,"column":8},"end":{"row":18,"column":0},"action":"insert","lines":["",""]},{"start":{"row":18,"column":0},"end":{"row":18,"column":8},"action":"insert","lines":["        "]},{"start":{"row":18,"column":8},"end":{"row":19,"column":0},"action":"insert","lines":["",""]},{"start":{"row":19,"column":0},"end":{"row":19,"column":8},"action":"insert","lines":["        "]},{"start":{"row":19,"column":8},"end":{"row":20,"column":0},"action":"insert","lines":["",""]},{"start":{"row":20,"column":0},"end":{"row":20,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":5},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":32},"action":"insert","lines":[" /* ---------- composite Charts -------------*/","    show_role_created_date(ndx);"],"id":6}],[{"start":{"row":4,"column":3},"end":{"row":4,"column":4},"action":"insert","lines":["/"],"id":7},{"start":{"row":4,"column":4},"end":{"row":4,"column":5},"action":"insert","lines":["/"]}],[{"start":{"row":7,"column":30},"end":{"row":7,"column":42},"action":"remove","lines":["transactions"],"id":8},{"start":{"row":7,"column":30},"end":{"row":7,"column":31},"action":"insert","lines":["c"]},{"start":{"row":7,"column":31},"end":{"row":7,"column":32},"action":"insert","lines":["o"]},{"start":{"row":7,"column":32},"end":{"row":7,"column":33},"action":"insert","lines":["m"]},{"start":{"row":7,"column":33},"end":{"row":7,"column":34},"action":"insert","lines":["p"]},{"start":{"row":7,"column":34},"end":{"row":7,"column":35},"action":"insert","lines":["o"]},{"start":{"row":7,"column":35},"end":{"row":7,"column":36},"action":"insert","lines":["s"]}],[{"start":{"row":7,"column":36},"end":{"row":7,"column":37},"action":"insert","lines":["i"],"id":9},{"start":{"row":7,"column":37},"end":{"row":7,"column":38},"action":"insert","lines":["t"]},{"start":{"row":7,"column":38},"end":{"row":7,"column":39},"action":"insert","lines":["e"]}],[{"start":{"row":7,"column":39},"end":{"row":7,"column":40},"action":"insert","lines":["c"],"id":10},{"start":{"row":7,"column":40},"end":{"row":7,"column":41},"action":"insert","lines":["h"]},{"start":{"row":7,"column":41},"end":{"row":7,"column":42},"action":"insert","lines":["a"]},{"start":{"row":7,"column":42},"end":{"row":7,"column":43},"action":"insert","lines":["r"]},{"start":{"row":7,"column":43},"end":{"row":7,"column":44},"action":"insert","lines":["t"]}],[{"start":{"row":9,"column":4},"end":{"row":10,"column":0},"action":"insert","lines":["",""],"id":11},{"start":{"row":10,"column":0},"end":{"row":10,"column":4},"action":"insert","lines":["    "]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":10,"column":31},"end":{"row":10,"column":47},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1572377356430}